/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication1;

import javax.swing.OverlayLayout;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.awt.*;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author lenovo
 */
public class UpdateDocumentUI extends javax.swing.JFrame {
 String selectedType="ouvrage";
 String selectedCriteria="";
 String selectedMemoire="Licence";
Object[][] tableData = null;

ArrayList<String> selectedAuthors = new ArrayList<>();
ArrayList<Integer> selectedAuthorsId = new ArrayList<>();


    /**
     * Creates new form AddDocumentUI
     */
    public UpdateDocumentUI() {
        initComponents();
        setLocationRelativeTo(null); 
        type.setSelectedItem(selectedType);
        performSearch();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpMemoire = new javax.swing.ButtonGroup();
        coteInput = new javax.swing.JTextField();
        titreInput = new javax.swing.JTextField();
        etat = new javax.swing.JComboBox<>();
        type = new javax.swing.JComboBox<>();
        addBtn = new javax.swing.JButton();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        coteLabel = new javax.swing.JLabel();
        titreLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        memoirePanel = new javax.swing.JPanel();
        licenceBtn = new javax.swing.JRadioButton();
        mastereBtn = new javax.swing.JRadioButton();
        doctoratBtn = new javax.swing.JRadioButton();
        ouvragePanel = new javax.swing.JPanel();
        editeur = new javax.swing.JTextField();
        isbn = new javax.swing.JTextField();
        editeurLabel = new javax.swing.JLabel();
        isbnLabel = new javax.swing.JLabel();
        etatLabel = new javax.swing.JLabel();
        nomAuteurLabel = new javax.swing.JLabel();
        homeBtn1 = new javax.swing.JButton();
        returnBtn1 = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        addDocImg = new javax.swing.JLabel();
        queryInput = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        searchBtn1 = new javax.swing.JToggleButton();
        errorLabel = new javax.swing.JLabel();
        docId = new javax.swing.JTextField();
        docIdLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        docTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        themeInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RT | Modifier Document");
        setBackground(new java.awt.Color(0, 0, 0));

        coteInput.setEditable(false);

        etat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "disponible", "non disponible" }));

        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ouvrage", "memoire" }));
        type.setSelectedItem("ouvrage");
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        addBtn.setText("Enregistrer");
        addBtn.setBackground(new java.awt.Color(0, 204, 51));
        addBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setHideActionText(true);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        coteLabel.setText("Cote");

        titreLabel.setText("Titre");

        dateLabel.setText("Date partution");

        jLayeredPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        memoirePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGrpMemoire.add(licenceBtn);
        licenceBtn.setSelected(true);
        licenceBtn.setText("Licence");
        licenceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                licenceBtnActionPerformed(evt);
            }
        });
        memoirePanel.add(licenceBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        btnGrpMemoire.add(mastereBtn);
        mastereBtn.setText("Mastere");
        mastereBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mastereBtnActionPerformed(evt);
            }
        });
        memoirePanel.add(mastereBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        btnGrpMemoire.add(doctoratBtn);
        doctoratBtn.setText("Doctorat");
        doctoratBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctoratBtnActionPerformed(evt);
            }
        });
        memoirePanel.add(doctoratBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jLayeredPane2.add(memoirePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 80));

        editeurLabel.setText("Editeur");

        isbnLabel.setText("ISBN");

        javax.swing.GroupLayout ouvragePanelLayout = new javax.swing.GroupLayout(ouvragePanel);
        ouvragePanel.setLayout(ouvragePanelLayout);
        ouvragePanelLayout.setHorizontalGroup(
            ouvragePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ouvragePanelLayout.createSequentialGroup()
                .addGroup(ouvragePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ouvragePanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(isbnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(isbn, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ouvragePanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(editeurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editeur, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        ouvragePanelLayout.setVerticalGroup(
            ouvragePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ouvragePanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(ouvragePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editeurLabel)
                    .addComponent(editeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(ouvragePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isbnLabel)
                    .addComponent(isbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jLayeredPane2.add(ouvragePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, -1));

        etatLabel.setText("Etat");

        nomAuteurLabel.setText("Auteur(s)");

        homeBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home_icon.png"))); // NOI18N
        homeBtn1.setBackground(new Color(0, 0, 0, 0));
        homeBtn1.setBorder(null);
        homeBtn1.setBorderPainted(false);
        homeBtn1.setFocusPainted(false);
        homeBtn1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home icon 50.png"))); // NOI18N
        homeBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtn1ActionPerformed(evt);
            }
        });

        returnBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/return_icon.png"))); // NOI18N
        returnBtn1.setAlignmentY(0.0F);
        returnBtn1.setBackground(new Color(0, 0, 0, 0));
        returnBtn1.setBorderPainted(false);
        returnBtn1.setFocusPainted(false);
        returnBtn1.setFocusable(false);
        returnBtn1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        returnBtn1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        returnBtn1.setRequestFocusEnabled(false);
        returnBtn1.setRolloverEnabled(false);
        returnBtn1.setVerifyInputWhenFocusTarget(false);
        returnBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtn1ActionPerformed(evt);
            }
        });

        title.setText("Modifier Document");
        title.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N

        addDocImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add Doc 50.png"))); // NOI18N

        queryInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryInputActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selectionner", "id", "cote", "titre", "auteur", "theme", "etat", "type" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        searchBtn1.setText("Rechercher");
        searchBtn1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        searchBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn1ActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));

        docIdLabel.setText("ID  document");

        docTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        docTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        docTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                docTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(docTable);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel1.setText("Theme");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(returnBtn1)
                .addGap(296, 296, 296)
                .addComponent(addDocImg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(homeBtn1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(docIdLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(docId, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(queryInput, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(titreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(coteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49))
                            .addComponent(dateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etatLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(themeInput)
                            .addComponent(etat, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(titreInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(datePicker1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(coteInput, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(nomAuteurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(returnBtn1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(homeBtn1)
                            .addComponent(addDocImg))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(title)
                .addGap(15, 15, 15)
                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(nomAuteurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(themeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(coteInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(coteLabel))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(titreInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(titreLabel))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etatLabel))))
                .addGap(8, 8, 8)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(searchBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(queryInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(docId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(docIdLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        homeBtn1.setOpaque(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
         selectedType = (String) type.getSelectedItem();
                if("ouvrage".equals(selectedType)){
            ouvragePanel.setVisible(true);
            memoirePanel.setVisible(false);
        }else{
            memoirePanel.setVisible(true);
            ouvragePanel.setVisible(false);
        }
    }//GEN-LAST:event_typeActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        String id = docId.getText();
        int cote = Integer.parseInt((String)coteInput.getText());
        String titreData = titreInput.getText();
        String dateString = datePicker1.getText();
        String etatData = (String) etat.getSelectedItem();
        String typeData = (String) type.getSelectedItem();
        String isbnData = isbn.getText();
        String editeurData = editeur.getText();
        String themeData = themeInput.getText();
        
       if(id.isEmpty() || titreData.isEmpty() || dateString.isEmpty()){
        JOptionPane.showMessageDialog(this,"Tous les champs sont obligatoires.");
        }else if("ouvrage".equals(typeData) && (isbnData.isEmpty() || editeurData.isEmpty()) ){
            JOptionPane.showMessageDialog(this,"L'ISBN et l'éditeur sont obligatoires.");
        }else if("memoire".equals(typeData) && (selectedMemoire.isEmpty()) ){
            JOptionPane.showMessageDialog(this,"Veuillez sélectionner le diplôme");
        }else{
        new Documents(cote,titreData,dateString,etatData,typeData,editeurData,isbnData,selectedMemoire,themeData).updateDocument(id);
        JOptionPane.showMessageDialog(this,"Abonné modifié aves succès");
        performSearch();
         }
        

    }//GEN-LAST:event_addBtnActionPerformed

    private void licenceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_licenceBtnActionPerformed
        selectedMemoire = licenceBtn.getText();

    }//GEN-LAST:event_licenceBtnActionPerformed

    private void mastereBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mastereBtnActionPerformed
        selectedMemoire = mastereBtn.getText();

    }//GEN-LAST:event_mastereBtnActionPerformed

    private void doctoratBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctoratBtnActionPerformed
        selectedMemoire = doctoratBtn.getText();
    }//GEN-LAST:event_doctoratBtnActionPerformed

    private void homeBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtn1ActionPerformed
       new AdminDashboardUI().setVisible(true);
       dispose();
    }//GEN-LAST:event_homeBtn1ActionPerformed

    private void returnBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtn1ActionPerformed
        new DocumentManagementUI().setVisible(true);
        dispose();
    }//GEN-LAST:event_returnBtn1ActionPerformed

    private void queryInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryInputActionPerformed
        performSearch();
    }//GEN-LAST:event_queryInputActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        selectedCriteria = (String) jComboBox1.getSelectedItem();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void searchBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn1ActionPerformed
        performSearch();
    }//GEN-LAST:event_searchBtn1ActionPerformed

    private void docTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docTableMouseClicked
        int selectedRow = docTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) docTable.getModel();
        Object id = model.getValueAt(selectedRow, 0);
        Object cote = model.getValueAt(selectedRow, 1);
        Object titre = model.getValueAt(selectedRow, 2);
        Object theme = model.getValueAt(selectedRow, 4);
        Object date_parution = model.getValueAt(selectedRow, 5);
        Object typeT = model.getValueAt(selectedRow, 6);
        Object diplome = model.getValueAt(selectedRow, 7);
        Object editeurT = model.getValueAt(selectedRow, 8);
        Object isbnT = model.getValueAt(selectedRow, 9);
        Object disponibilty = model.getValueAt(selectedRow, 10);
        docId.setText((String)id);
        coteInput.setText((String)cote);
        titreInput.setText((String)titre);
        editeur.setText((String)editeurT);
        isbn.setText((String)isbnT);
        themeInput.setText((String)theme);
       
             SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd");  
            java.util.Date utilDate;
     try {
         utilDate = inputFormat.parse((String)date_parution);
         SimpleDateFormat outputFormat = new SimpleDateFormat("d MMMM yyyy", Locale.FRENCH);
            String formattedDate = outputFormat.format(utilDate);
        datePicker1.setText(formattedDate);
     } catch (ParseException ex) {
         Logger.getLogger(UpdateDocumentUI.class.getName()).log(Level.SEVERE, null, ex);
     }
             
        type.setSelectedItem(typeT);
        etat.setSelectedItem(disponibilty);
        selectedMemoire=(String)diplome;
        if (selectedMemoire != null && selectedMemoire.equals("Licence")) {
                licenceBtn.setSelected(true);
            } else {
                licenceBtn.setSelected(false);
            }
            if (selectedMemoire != null && selectedMemoire.equals("Mastere")) {
                mastereBtn.setSelected(true);
            } else {
                mastereBtn.setSelected(false);
            }
            if (selectedMemoire != null && selectedMemoire.equals("Doctorat")) {
                doctoratBtn.setSelected(true);
            } else {
                doctoratBtn.setSelected(false);
            }

        getAuthors((String)id);
    }//GEN-LAST:event_docTableMouseClicked
    

    private void getAuthors(String docId){

        Connection conn=null;
       ResultSet resultSet=null;
       PreparedStatement statement=null;
        try {
            conn = DBConnection.getConnection();
            statement = conn.prepareStatement("SELECT * FROM authors,documents_authors WHERE author_id=code_auteur AND document_id= ?");
            statement.setString(1,docId);
            resultSet = statement.executeQuery();
            
            ArrayList<String> data = new ArrayList<>();

            while (resultSet.next()) {
                int id = resultSet.getInt("code_auteur");
                String lastName = resultSet.getString("prenom_auteur");
                String firstName = resultSet.getString("nom_auteur");
                data.add(lastName  +" "+ firstName);
           }
                jTextArea1.setText(String.join(", ", data));
 
               
        } catch (SQLException e) {
        }
    }
         private void performSearch() {
        String query = queryInput.getText();
       
        tableData = new Documents().getDocuments(query, selectedCriteria);
            if (tableData != null && tableData.length > 0) {
                    errorLabel.setText(""); 
                    docTable.setModel(new javax.swing.table.DefaultTableModel(
                        tableData,
                        new String[]{"ID","Cote","Titre","Auteur","Theme","Date","Type","Diplome","Editeur","ISBN", "Etat"} 
                    ));
                } else {
                errorLabel.setText("Aucun enregistrement trouvé");
                    }    
                TableColumnModel columnModel = docTable.getColumnModel();
                columnModel.getColumn(0).setPreferredWidth(10);
                columnModel.getColumn(1).setPreferredWidth(10);
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel addDocImg;
    private javax.swing.ButtonGroup btnGrpMemoire;
    private javax.swing.JTextField coteInput;
    private javax.swing.JLabel coteLabel;
    private javax.swing.JLabel dateLabel;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private javax.swing.JTextField docId;
    private javax.swing.JLabel docIdLabel;
    private javax.swing.JTable docTable;
    private javax.swing.JRadioButton doctoratBtn;
    private javax.swing.JTextField editeur;
    private javax.swing.JLabel editeurLabel;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JComboBox<String> etat;
    private javax.swing.JLabel etatLabel;
    private javax.swing.JButton homeBtn1;
    private javax.swing.JTextField isbn;
    private javax.swing.JLabel isbnLabel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JRadioButton licenceBtn;
    private javax.swing.JRadioButton mastereBtn;
    private javax.swing.JPanel memoirePanel;
    private javax.swing.JLabel nomAuteurLabel;
    private javax.swing.JPanel ouvragePanel;
    private javax.swing.JTextField queryInput;
    private javax.swing.JButton returnBtn1;
    private javax.swing.JToggleButton searchBtn1;
    private javax.swing.JTextField themeInput;
    private javax.swing.JLabel title;
    private javax.swing.JTextField titreInput;
    private javax.swing.JLabel titreLabel;
    private javax.swing.JComboBox<String> type;
    // End of variables declaration//GEN-END:variables
}
